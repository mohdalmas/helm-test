# Default values for rosita-chatbot application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# *****RECOMENDATION: Pass your secret information using K8S Secret instead providing sensitive info here ******

# Two Secrets will be requires 
# 1: Storage account and 
# 2: registrysecret to access private registry

# Create a secret with the following command and pass the secret name into imagePullSecret variable.
# kubectl create secret docker-registry regcred --docker-server=<your-registry-server> \
# --docker-username=<your-name> --docker-password=<your-pword> --docker-email=<your-email

imagePullSecret: {}

rbac:
  create: true
  apiGroups:
    - core
  resources:
    - pods
  verbs:
    - get
    - list
  annotations: {}

securityContext:
  enabled: true
  fsGroup: 1000
  runAsUser: 1000

# Pod annotaion for each Pod.
podAnnotations: {}

# Provide Azure storage name, accountName, Account Key and mountPath for Pods, if there is an existing secret, pass the secret name and storage name.
azureFileStorage:
  create: false
  storageName: "rosita" 
  azureStorageAccountName: ""
  azureStorageAccountKey: ""
  mountPath: "/app"
  existingStorageSecret: ""


rositaChatbot:
  image:
    repository: "datascience27043641.azurecr.io/datascience-chatbot-rosita_chatbot_service"
    tag: ""
    pullPolicy: "IfNotPresent"
  resources:
    limits:
      memory: "8Gi"
      cpu: "4"
  extraEnvValues: {}
  service:
    annotations: {}
    type: ClusterIP
    loadBalancerIP: ""
    ports:
      - name: rc
        protocol: TCP
        port: 3001

insightManager:
  image:
    repository: "datascience27043641.azurecr.io/datascience-chatbot-insight_manager_service"
    tag: ""
    pullPolicy: "IfNotPresent"
  resources:
    limits:
      memory: "8Gi"
      cpu: "4"
  extraEnvValues: {}
  service:
    annotations: {}
    type: ClusterIP
    loadBalancerIP: ""
    ports:
      - name: im
        protocol: TCP
        port: 4000

questionGenerator:
  image:
    repository: "datascience27043641.azurecr.io/datascience-chatbot-question_generator_service"
    tag: ""
    pullPolicy: "IfNotPresent"
  resources:
    limits:
      memory: "8Gi"
      cpu: "4"
  extraEnvValues: {}
  service:
    annotations: {}
    type: ClusterIP
    loadBalancerIP: ""
    ports:
      - name: qg
        protocol: TCP
        port: 3000

responseAnalyzer:
  image:
    repository: "datascience27043641.azurecr.io/datascience-chatbot-response_analyzer_service"
    tag: ""
    pullPolicy: "IfNotPresent"
# Configure GPU Enable cluster before applying the below GPU required resources.
# https://learn.microsoft.com/en-us/azure/aks/gpu-cluster
  resources:
    limits:
      memory: "8Gi"
      cpu: "4"
      nvidia.com/gpu: 1
  extraEnvValues: {}
  service:
    annotations: {}
    type: ClusterIP
    loadBalancerIP: ""
    ports:
      - name: ra
        protocol: TCP
        port: 5000

ingress:
  # -- Enable creation of ingress resources
  enable: false
  # Annotations applied to all ingresses
  annotations: {}
  # `ingressClassName` applied to all ingresses
  ingressClassName:
  # Array of ingresses (each entry will become an Ingress resource)
  # You must define your ingress resources!
  ingress: {}
#    - name: ingress-example
#      # TLS secrets for this ingress
#      tls: {}
#      # Override the ingressClassName for this ingress
#      ingressClassName:
#      # Annotation overrides (merged with defaults)
#      annotations: {}
#      # Array of Ingress rules
#      # https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
#      rules:
#        - host: ingress.example.com
#          paths:
#            - path: /*
#              port: 8088
#        - host: ingress2.example.com
#          paths:
#            - path: /exact/path/matching
#              # Other path kinds can be specified (default is Prefix)
#              # https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types
#              kind: Exact
#              port: 8080
#            - path: /*
#              port: 8082
#        # Example default rule without host name
#        - paths:
#            - path: /*
#              port: 8088